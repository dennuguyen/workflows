name: Autograding Tests

on:
  push:
    branches:
      main

jobs:
  run-autograding-tests:
    runs-on: ubuntu-latest
    if: github.actor != 'github-classroom[bot]'
    # services:
    #   gtest:
    #     image: docker://srzzumix/googletest:latest
    #   webots:
    #     image: cyberbotics/webots:latest
    steps:
    - name: Install gtest
      uses: MarkusJx/googletest-installer@v1.1
    - name: Creating workspace
      uses: actions/checkout@v5
      with:
        fetch-depth: 0
    - name: Checking out test code
      uses: actions/checkout@v5
      with:
        fetch-depth: 0
        repository: UNSW-MTRN2500/webots-utils
        path: temp
    - name: Copying test code into workspace
      uses: ./.github/actions/copy-files
      with:
        mapping: |
          temp/protos/lab7/epuck.proto: protos/epuck.proto
          temp/protos/lab7/ds.proto: protos/ds.proto
    # - name: Starting up Webots simulation...
    #   uses: ./.github/actions/run-webots
    #   timeout-minutes: 1
    #   with:
    #     world: "worlds/arena.wbt"
    - name: Install Cmake
      uses: lukka/get-cmake@latest
    - name: Create build directory
      run: cmake -S . -B build -DCMAKE_BUILD_TYPE=Release
    - name: Setting up Python environment
      uses: actions/setup-python@v6
      with:
        python-version: 3.13
        cache: pip
    - name: Install Python dependencies
      shell: bash
      run: pip install -r ./.github/actions/run-gtest/requirements.txt
    - name: Stage 1
      uses: ./.github/actions/run-gtest
      with:
        target: test_stage1
    - name: Stage 2
      uses: ./.github/actions/run-gtest
      with:
        target: test_stage2
    # - name: Report test results
    #   uses: ./.github/actions/gtest-reporter
    #   with:
    #     target:
    #     - stage-1
    #     - stage-2

    # - name: Autograding Reporter
    #   uses: classroom-resources/autograding-grading-reporter@v1
    #   env:
    #     COMPILATION_RESULTS: "${{steps.compilation.outputs.result}}"
    #     STAGE-1_RESULTS: "${{steps.stage-1.outputs.result}}"
    #   with:
    #     runners: compilation,stage-1
